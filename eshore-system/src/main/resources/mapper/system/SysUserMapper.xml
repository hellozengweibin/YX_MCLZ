<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eshore.system.mapper.SysUserMapper">

    <resultMap type="SysUser" id="SysUserResult">
        <id property="userId" column="user_id"/>
        <result property="deptId" column="dept_id"/>
        <result property="userName" column="user_name"/>
        <result property="userType" column="user_type"/>
        <result property="platformType" column="platform_type"/>
        <result property="nickName" column="nick_name"/>
        <result property="email" column="email"/>
        <result property="phonenumber" column="phonenumber"/>
        <result property="sex" column="sex"/>
        <result property="avatar" column="avatar"/>
        <result property="password" column="password"/>
        <result property="status" column="status"/>
        <result property="delFlag" column="del_flag"/>
        <result property="loginIp" column="login_ip"/>
        <result property="loginDate" column="login_date"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
        <result property="initFlag" column="init_flag"/>
        <result property="passwordLastModifyTime" column="password_last_modify_time"/>
        <result property="passwordExpireTime" column="password_expire_time"/>
        <association property="dept" column="dept_id" javaType="SysDept" resultMap="deptResult"/>
        <collection property="roles" javaType="java.util.List" resultMap="RoleResult"/>
    </resultMap>

    <resultMap id="deptResult" type="SysDept">
        <id property="deptId" column="dept_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="deptName" column="dept_name"/>
        <result property="orderNum" column="order_num"/>
        <result property="leader" column="leader"/>
        <result property="status" column="dept_status"/>
        <result property="platformType" column="dept_platform_type"/>
    </resultMap>

    <resultMap id="RoleResult" type="SysRole">
        <id property="roleId" column="role_id"/>
        <result property="roleName" column="role_name"/>
        <result property="roleKey" column="role_key"/>
        <result property="roleSort" column="role_sort"/>
        <result property="dataScope" column="data_scope"/>
        <result property="status" column="role_status"/>
        <result property="platformType" column="role_platform_type"/>
    </resultMap>

    <sql id="selectUserVo">
        SELECT
            u.user_id,u.dept_id,u.user_name, u.user_type,u.platform_type,u.init_flag, u.nick_name, u.email, u.avatar,
            u.phonenumber,u.password,u.sex, u.status,u.login_ip, u.login_date,u.del_flag,  u.create_by,  u.create_time,
            u.remark,u.password_last_modify_time,u.password_expire_time,
            d.dept_id,d.parent_id, d.dept_name,d.platform_type AS dept_platform_type, d.order_num, d.leader, d.status AS dept_status,
            r.role_id, r.role_name,r.platform_type AS role_platform_type, r.role_key, r.role_sort, r.data_scope, r.status AS role_status
        FROM sys_user u
        LEFT JOIN sys_dept d ON u.dept_id = d.dept_id
        LEFT JOIN sys_user_role ur ON u.user_id = ur.user_id
        LEFT JOIN sys_role r ON r.role_id = ur.role_id
    </sql>

    <select id="selectUserList" parameterType="SysUser" resultMap="SysUserResult">
        SELECT
            u.user_id, u.dept_id, u.nick_name, u.user_name,u.user_type,u.platform_type, u.email, u.avatar,
            u.phonenumber, u.password, u.sex,u.user_type, u.status, u.del_flag, u.login_ip, u.login_date,
            u.create_by, u.create_time,  u.remark, d.dept_name, d.leader,u.init_flag,
            u.password_expire_time,u.password_last_modify_time
        FROM sys_user u
        LEFT JOIN sys_dept d ON u.dept_id = d.dept_id
        WHERE u.del_flag = '0'
        <if test="userId != null and userId != 0">
            AND u.user_id = #{userId}
        </if>
        <if test="userName != null and userName != ''">
            AND (u.user_name LIKE concat('%', #{userName}, '%') OR u.nick_name LIKE concat('%',#{userName},'%'))
        </if>
        <if test="status != null and status != ''">
            AND u.status = #{status}
        </if>
        <if test="platformType != null and platformType != ''">
            AND FIND_IN_SET(#{platformType},u.platform_type)
        </if>
        <if test="phonenumber != null and phonenumber != ''">
            AND u.phonenumber LIKE concat('%', #{phonenumber}, '%')
        </if>
        <if test="params.excludeId != null and params.excludeId != ''">
            AND u.user_id != #{params.excludeId}
        </if>
        <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
            AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
        </if>
        <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
            AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
        </if>
        <if test="deptId != null and deptId != 0">
            AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE find_in_set(#{deptId},
            ancestors) ))
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
        ORDER BY u.create_time DESC
    </select>

    <select id="selectAllocatedList" parameterType="SysUser" resultMap="SysUserResult">
        SELECT DISTINCT u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.phonenumber, u.status, u.create_time
        FROM sys_user u
        LEFT JOIN sys_dept d ON u.dept_id = d.dept_id
        LEFT JOIN sys_user_role ur ON u.user_id = ur.user_id
        LEFT JOIN sys_role r ON r.role_id = ur.role_id
        WHERE u.del_flag = '0' AND r.role_id = #{roleId}
        <if test="params.excludeId != null and params.excludeId != ''">
            AND u.user_id != #{params.excludeId}
        </if>
        <if test="userName != null and userName != ''">
            AND u.user_name LIKE concat('%', #{userName}, '%')
        </if>
        <if test="phonenumber != null and phonenumber != ''">
            AND u.phonenumber LIKE concat('%', #{phonenumber}, '%')
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
        ORDER BY u.create_time DESC
    </select>

    <select id="selectUnallocatedList" parameterType="SysUser" resultMap="SysUserResult">
        SELECT DISTINCT u.user_id, u.dept_id, u.user_name, u.nick_name, u.email, u.phonenumber, u.status, u.create_time
        FROM sys_user u
        LEFT JOIN sys_dept d ON u.dept_id = d.dept_id
        LEFT JOIN sys_user_role ur ON u.user_id = ur.user_id
        LEFT JOIN sys_role r ON r.role_id = ur.role_id
        WHERE u.del_flag = '0' AND (r.role_id != #{roleId} OR r.role_id IS NULL)
        AND u.user_id NOT IN (SELECT u.user_id FROM sys_user u INNER JOIN sys_user_role ur ON u.user_id = ur.user_id AND
        ur.role_id = #{roleId})
        <if test="params.excludeId != null and params.excludeId != ''">
            AND u.user_id != #{params.excludeId}
        </if>
        <if test="userName != null and userName != ''">
            AND u.user_name LIKE concat('%', #{userName}, '%')
        </if>
        <if test="phonenumber != null and phonenumber != ''">
            AND u.phonenumber LIKE concat('%', #{phonenumber}, '%')
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
        ORDER BY u.create_time DESC
    </select>

    <select id="selectUserByUserName" parameterType="java.lang.String" resultMap="SysUserResult">
        <include refid="selectUserVo"/> WHERE u.user_name = #{userName}
    </select>

    <select id="selectUserByUserNameS" parameterType="java.lang.String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        WHERE u.user_name = #{userName}
        <if test="platformType != null and platformType != ''">
            AND (CASE WHEN u.platform_type IS NULL OR u.platform_type = '' THEN (find_in_set(#{platformType},u.platform_type)  OR 1 = 1 ) ELSE find_in_set(#{platformType},u.platform_type) END)
        </if>
    </select>

    <select id="selectUserByPhone" parameterType="java.lang.String" resultMap="SysUserResult">
        <include refid="selectUserVo"/> WHERE u.phonenumber = #{phone}
    </select>

    <select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
        <include refid="selectUserVo"/> WHERE u.user_id = #{userId}
    </select>

    <select id="checkUserNameUnique" parameterType="String" resultType="int">
        SELECT count(1) FROM sys_user WHERE user_name = #{userName} LIMIT 1
    </select>

    <select id="checkPhoneUnique" parameterType="String" resultMap="SysUserResult">
        SELECT user_id, phonenumber FROM sys_user WHERE phonenumber = #{phonenumber} LIMIT 1
    </select>

    <select id="checkEmailUnique" parameterType="String" resultMap="SysUserResult">
        SELECT user_id, email FROM sys_user WHERE email = #{email} LIMIT 1
    </select>
    <select id="queryOptUser" resultType="com.eshore.common.core.domain.entity.SysUser">
        SELECT su.user_id,su.nick_name
        from sys_user su
                 INNER JOIN sys_user_dev_rel sudr on su.user_id = sudr.user_id
        where su.dept_id = #{deptId}
          and sudr.dev_id = #{devId}
          and sudr.dev_type = #{devType}
    </select>

    <insert id="insertUser" parameterType="SysUser" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO sys_user(
        <if test="userId != null and userId != 0">user_id,</if>
        <if test="deptId != null and deptId != 0">dept_id,</if>
        <if test="userName != null and userName != ''">user_name,</if>
        <if test="userType != null and userType != ''">user_type,</if>
        <if test="associationDataId != null and associationDataId != ''">association_data_id,</if>
        <if test="nickName != null and nickName != ''">nick_name,</if>
        <if test="email != null and email != ''">email,</if>
        <if test="avatar != null and avatar != ''">avatar,</if>
        <if test="phonenumber != null and phonenumber != ''">phonenumber,</if>
        <if test="sex != null and sex != ''">sex,</if>
        <if test="password != null and password != ''">password,</if>
        <if test="status != null and status != ''">status,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        <if test="remark != null and remark != ''">remark,</if>
        <if test="platformType != null and platformType != ''">platform_type,</if>
        <if test="initFlag != null">init_flag,</if>
        <if test="passwordLastModifyTime != null">password_last_modify_time,</if>
        <if test="passwordExpireTime != null">password_expire_time,</if>
        create_time
        )VALUES(
        <if test="userId != null and userId != ''">#{userId},</if>
        <if test="deptId != null and deptId != ''">#{deptId},</if>
        <if test="userName != null and userName != ''">#{userName},</if>
        <if test="userType != null and userType != ''">#{userType},</if>
        <if test="associationDataId != null and associationDataId != ''">#{associationDataId},</if>
        <if test="nickName != null and nickName != ''">#{nickName},</if>
        <if test="email != null and email != ''">#{email},</if>
        <if test="avatar != null and avatar != ''">#{avatar},</if>
        <if test="phonenumber != null and phonenumber != ''">#{phonenumber},</if>
        <if test="sex != null and sex != ''">#{sex},</if>
        <if test="password != null and password != ''">#{password},</if>
        <if test="status != null and status != ''">#{status},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="platformType != null and platformType != ''">#{platformType},</if>
        <if test="initFlag != null">#{initFlag},</if>
        <if test="passwordLastModifyTime != null ">#{passwordLastModifyTime},</if>
        <if test="passwordExpireTime != null ">#{passwordExpireTime},</if>
        sysdate()
        )
    </insert>

    <update id="updateUser" parameterType="SysUser">
        UPDATE sys_user
        <set>
            <if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
            <if test="userName != null and userName != ''">user_name = #{userName},</if>
            <if test="userType != null and userType != ''">user_type = #{userType},</if>
            <if test="associationDataId != null and associationDataId != ''">association_data_id = #{associationDataId},</if>
            <if test="platformType != null and platformType != ''">platform_type = #{platformType},</if>
            <if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
            <if test="email != null ">email = #{email},</if>
            <if test="phonenumber != null ">phonenumber = #{phonenumber},</if>
            <if test="sex != null and sex != ''">sex = #{sex},</if>
            <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
            <if test="loginDate != null">login_date = #{loginDate},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="initFlag != null">init_flag = #{initFlag},</if>
            <if test="passwordLastModifyTime != null">password_last_modify_time = #{passwordLastModifyTime},</if>
            <if test="passwordExpireTime != null">password_expire_time = #{passwordExpireTime},</if>
            update_time = sysdate()
        </set>
        WHERE user_id = #{userId}
    </update>

    <update id="updateUserStatus" parameterType="SysUser">
        UPDATE sys_user SET status = #{status}  WHERE user_id = #{userId}
    </update>

    <update id="updateUserAvatar" parameterType="SysUser">
        UPDATE sys_user  SET avatar = #{avatar}  WHERE user_name = #{userName}
    </update>

    <update id="resetUserPwd" parameterType="SysUser">
        UPDATE sys_user SET password = #{password} WHERE user_name = #{userName}
    </update>

    <delete id="deleteUserById" parameterType="Long">
        UPDATE sys_user SET del_flag = '2' WHERE user_id = #{userId}
    </delete>

    <delete id="deleteUserByIds" parameterType="Long">
        UPDATE sys_user SET del_flag = '2' WHERE user_id in
        <foreach collection="array" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

</mapper>
